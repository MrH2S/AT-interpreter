language : c
#compiler :
#    - gcc
#    - clang
os : linux

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "1pYa90gpLRKFgdO7ludhElYQITOENSLO6mzFVBj2lPVx9KpH7rfg4ZYlnKzEBNlB5nSgd96dWfEA0mTZ8vsItXCvxwrJPFrhm95O+NvKhJ8JmvjvoNRDImkdvdq0HkoXoaRi4Jn7SkyeyMiSjNlP6vBGk2+nr45I5GmXbvD/1a83Mo0oONd8zURWcZnKSEclkZM2i2LDBZFtc6KwVgvFTGl/pbmBitxb+OmM/VvLWxBCtgSHp7sYSgtx/nqpkWtIhhi2dqQRW/pjFCqDk1MfQRuehYz9jPc3RUNanadC7M9EU4JONl9TYw/0SHwFTxQczdkFFS6wBj11kyTu0saC5wKfSLA13TTmVpMgeE+SMbJsQfUAbh7Fn/iJjKvIw8DyZ8d8OX6f5tP4vWRzN7CcBXtLPBYrB/Muc7dUdKUpqqMoldXVGHWsEHysQnj8EPPFsTHGuN1Qs0QXntLuY/KU6GzBCMZN9xCI+3R82dV1mNV68Tq5R/5fI6lQmYKpirKarN+M/7lQGtpCg9N1uD3pxQ1NYKgFmFCSrjYdiipghYDlrLyhy7Zhw/I4ApaiRP/61/8yuOtk2n87PG+bCXksdV0DzUyTuz9HIn/2wBbc5uBjYAC5NMmwqEXH7KZI2Bbo8hSkg1m97Cji3mE67YDvCa5fXenHCZM3nrkJmQdPXsY="

matrix:
  include:
    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env:
         - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
      env:
        - MATRIX_EVAL="CC=clang-3.6 && CXX=clang++-3.6"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
      env:
        - MATRIX_EVAL="CC=clang-3.7 && CXX=clang++-3.7"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
      env:
        - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"

    # works on Trusty
#    - os: linux
#      addons:
#        apt:
#          sources:
#            - llvm-toolchain-trusty-3.9
#          packages:
#            - clang-3.9
#      env:
#        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"

    # works on Trusty
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"

    # works on Trusty
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

    # works on Trusty
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-6.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-6.0
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"

    # works on Trusty
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-7
            - ubuntu-toolchain-r-test
          packages:
            - clang-7

        coverity_scan:
          project:
            name: "Shylock-Hg/AT-interpreter"
            description: "Simple AT command parser library."
          notification_email: tcath2s@gmail.com
          # build_command_prepend:
          build_command: "make -j8"
          branch_pattern: coverity_scan
      env:
        - MATRIX_EVAL="CC=clang-7 && CXX=clang++-7"

before_install:
    - eval "${MATRIX_EVAL}"
    - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
    - sudo apt-get install valgrind
    #- pip install --user cpp-coveralls

script :
    - make -j8
    - sudo make install
    - export LD_LIBRARY_PATH=/usr/local/lib
    - make test
    - sudo make uninstall
    - make clean

after_success:
    #- coveralls --exclude=test.c --gcov-options='\-lp'
    - bash <(curl -s https://codecov.io/bash)

